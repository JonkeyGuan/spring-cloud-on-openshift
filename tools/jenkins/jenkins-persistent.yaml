apiVersion: v1
kind: List
labels:
  app: jenkins-persistent
  template: jenkins-persistent-template
items:
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: {{ jenkins_service }}
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
      name: '{{ jenkins_service }}'
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: '{{ jenkins_service }}'
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: '{{ jenkins_service }}'
      labels:
        app: {{ jenkins_service }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '{{ jenkins_volume_capacity }}'
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      labels:
        app: {{ jenkins_service }}
      name: '{{ jenkins_service }}'
    spec:
      replicas: 1
      selector:
        name: '{{ jenkins_service }}'
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: '{{ jenkins_service }}'
        spec:
          containers:
            - capabilities: {}
              env:
                - name: OPENSHIFT_ENABLE_OAUTH
                  value: '{{ jenkins_enable_oauth }}'
                - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
                  value: 'true'
                - name: DISABLE_ADMINISTRATIVE_MONITORS
                  value: '{{ jenkins_disable_administrative_monitors }}'
                - name: KUBERNETES_MASTER
                  value: 'https://kubernetes.default:443'
                - name: KUBERNETES_TRUST_CERTIFICATES
                  value: 'true'
                - name: JENKINS_SERVICE_NAME
                  value: '{{ jenkins_service }}'
                - name: JNLP_SERVICE_NAME
                  value: '{{ jenkins_jnlp_service }}'
                - name: ENABLE_FATAL_ERROR_LOG_FILE
                  value: '{{ jenkins_enable_fatal_error_log_file }}'
                - name: JENKINS_UC_INSECURE
                  value: '{{ jenkins_uc_insecure }}'
              image: ' '
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 2
                httpGet:
                  path: /login
                  port: 8080
                initialDelaySeconds: 420
                periodSeconds: 360
                timeoutSeconds: 240
              name: jenkins
              readinessProbe:
                httpGet:
                  path: /login
                  port: 8080
                initialDelaySeconds: 3
                timeoutSeconds: 240
              resources:
                requests:
                  cpu: '{{ jenkins_cpu_request }}'
                  memory: '{{ jenkins_memory_request }}'
                limits:
                  cpu: '{{ jenkins_cpu_limit }}'
                  memory: '{{ jenkins_memory_limit }}'
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                - mountPath: /var/lib/jenkins
                  name: '{{ jenkins_service }}-data'
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: '{{ jenkins_service }}'
          volumes:
            - name: '{{ jenkins_service }}-data'
              persistentVolumeClaim:
                claimName: '{{ jenkins_service }}'
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - jenkins
            from:
              kind: ImageStreamTag
              name: '{{ jenkins_imagestream_tag }}'
              namespace: '{{ jenkins_imagestream_namespace }}'
            lastTriggeredImage: ''
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: >-
          {"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"{{ jenkins_service }}"}}
      labels:
        app: {{ jenkins_service }}          
      name: '{{ jenkins_service }}'
  - apiVersion: v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: '{{ jenkins_service }}_edit'
      labels:
        app: {{ jenkins_service }}
    roleRef:
      name: edit
    subjects:
      - kind: ServiceAccount
        name: '{{ jenkins_service }}'
  - apiVersion: v1
    kind: Service
    metadata:
      name: '{{ jenkins_jnlp_service }}'
      labels:
        app: {{ jenkins_service }}
    spec:
      ports:
        - name: agent
          nodePort: 0
          port: 50000
          protocol: TCP
          targetPort: 50000
      selector:
        name: '{{ jenkins_service }}'
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "{{ jenkins_jnlp_service }}", "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: 'true'
      name: '{{ jenkins_service }}'
      labels:
        app: {{ jenkins_service }}
    spec:
      ports:
        - name: web
          nodePort: 0
          port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        name: '{{ jenkins_service }}'
      sessionAffinity: None
      type: ClusterIP