kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    role: jenkins-slave
    app: {{ jenkins_service }}
  name: {{ jenkins_maven_slave_configmap }}
data:
  template1: |-
    <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
      <inheritFrom></inheritFrom>
      <name>{{ jenkins_maven_slave_configmap_name }}</name>
      <namespace></namespace>
      <privileged>false</privileged>
      <alwaysPullImage>false</alwaysPullImage>
      <instanceCap>2147483647</instanceCap>
      <slaveConnectTimeout>100</slaveConnectTimeout>
      <idleMinutes>0</idleMinutes>
      <activeDeadlineSeconds>0</activeDeadlineSeconds>
      <label>{{ jenkins_maven_slave_configmap_label }}</label>
      <serviceAccount>jenkins</serviceAccount>
      <nodeSelector></nodeSelector>
        <nodeUsageMode>NORMAL</nodeUsageMode>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
      <volumes>
        <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
          <mountPath>/home/jenkins/.m2/repository</mountPath>
          <claimName>{{ jenkins_maven_slave_pvc }}</claimName>
          <readOnly>false</readOnly>
        </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
      </volumes>
      <containers>
        <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          <name>jnlp</name>
            <image>{{ jenkins_maven_slave_configmap_image }}</image>
          <privileged>false</privileged>
          <alwaysPullImage>false</alwaysPullImage>
          <workingDir>/tmp</workingDir>
          <command></command>
          <args>${computer.jnlpmac} ${computer.name}</args>
          <ttyEnabled>false</ttyEnabled>
          <resourceRequestCpu>{{ jenkins_maven_slave_request_cpu }}</resourceRequestCpu>
          <resourceRequestMemory>{{ jenkins_maven_slave_request_memory }}</resourceRequestMemory>
          <resourceLimitCpu>{{ jenkins_maven_slave_limit_cpu }}</resourceLimitCpu>
          <resourceLimitMemory>{{ jenkins_maven_slave_limit_memory }}</resourceLimitMemory>
          <envVars>
            <org.csanchez.jenkins.plugins.kubernetes.model.KeyValueEnvVar>
              <key>MAVEN_MIRROR_URL</key>
              <value>{{ nexus_url }}/repository/maven-all-public</value>
            </org.csanchez.jenkins.plugins.kubernetes.model.KeyValueEnvVar>
          </envVars>
          <ports/>
          <livenessProbe>
            <execArgs></execArgs>
            <timeoutSeconds>0</timeoutSeconds>
            <initialDelaySeconds>0</initialDelaySeconds>
            <failureThreshold>0</failureThreshold>
            <periodSeconds>0</periodSeconds>
            <successThreshold>0</successThreshold>
          </livenessProbe>
        </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
      </containers>
      <envVars/>
      <annotations/>
      <imagePullSecrets/>
      <nodeProperties/>
    </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>